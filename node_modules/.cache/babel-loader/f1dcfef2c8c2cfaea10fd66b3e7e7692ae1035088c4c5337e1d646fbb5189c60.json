{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"list\"\n};\nvar _hoisted_2 = {\n  \"class\": \"bar\"\n};\nvar _hoisted_3 = [\"src\"];\nvar _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Ricky and morty characters list\", -1 /* HOISTED */);\nvar _hoisted_5 = {\n  \"class\": \"characters\"\n};\nvar _hoisted_6 = {\n  \"class\": \"card-container\"\n};\nvar _hoisted_7 = [\"src\", \"alt\"];\nvar _hoisted_8 = {\n  \"class\": \"character-container\"\n};\nvar _hoisted_9 = /*#__PURE__*/_createElementVNode(\"span\", null, null, -1 /* HOISTED */);\nvar _hoisted_10 = /*#__PURE__*/_createElementVNode(\"span\", null, null, -1 /* HOISTED */);\nvar _hoisted_11 = [_hoisted_9, _hoisted_10];\nvar _hoisted_12 = {\n  \"class\": \"container-image\"\n};\nvar _hoisted_13 = [\"src\", \"alt\"];\nvar _hoisted_14 = {\n  \"class\": \"label-container\"\n};\nvar _hoisted_15 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Name:\", -1 /* HOISTED */);\nvar _hoisted_16 = {\n  \"class\": \"label-container\"\n};\nvar _hoisted_17 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Location:\", -1 /* HOISTED */);\nvar _hoisted_18 = {\n  \"class\": \"label-container\"\n};\nvar _hoisted_19 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Status:\", -1 /* HOISTED */);\nvar _hoisted_20 = /*#__PURE__*/_createElementVNode(\"p\", {\n  \"class\": \"label-container\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", null, \"Episodes:\")], -1 /* HOISTED */);\nvar _hoisted_21 = {\n  \"class\": \"episodes-list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"img\", {\n    \"class\": \"rick-morty-logo\",\n    src: $data.Logo,\n    alt: \"ricky morty logo\"\n  }, null, 8 /* PROPS */, _hoisted_3), _hoisted_4]), _createElementVNode(\"ul\", _hoisted_5, [_createCommentVNode(\" Iterar sobre a lista de personagens \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.characters, function (character) {\n    return _openBlock(), _createElementBlock(\"li\", {\n      onClick: _cache[1] || (_cache[1] = function () {\n        return _ctx.showCharacter && _ctx.showCharacter.apply(_ctx, arguments);\n      }),\n      key: character.id,\n      \"class\": \"character\"\n    }, [_createCommentVNode(\" Mostrar os dados do personagem \"), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"img\", {\n      \"class\": \"character-image\",\n      src: character.image,\n      alt: character.name\n    }, null, 8 /* PROPS */, _hoisted_7), _createElementVNode(\"h4\", null, _toDisplayString(character.name), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", {\n      onClick: _cache[0] || (_cache[0] = function () {\n        return $options.closeCharacter && $options.closeCharacter.apply($options, arguments);\n      }),\n      \"class\": \"close-button\"\n    }, _hoisted_11), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"img\", {\n      src: character.image,\n      alt: character.name\n    }, null, 8 /* PROPS */, _hoisted_13)]), _createElementVNode(\"p\", _hoisted_14, [_hoisted_15, _createTextVNode(\" \" + _toDisplayString(character.name), 1 /* TEXT */)]), _createElementVNode(\"p\", _hoisted_16, [_hoisted_17, _createTextVNode(\" \" + _toDisplayString(character.location.name), 1 /* TEXT */)]), _createElementVNode(\"p\", _hoisted_18, [_hoisted_19, _createTextVNode(\" \" + _toDisplayString(character.status), 1 /* TEXT */)]), _hoisted_20, _createElementVNode(\"ul\", _hoisted_21, [_createCommentVNode(\" Iterar sobre os episódios do personagem \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.getEpisodes(character), function (episode) {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: episode.id\n      }, [_createElementVNode(\"span\", null, _toDisplayString(episode.episode), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))])])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_9","_hoisted_10","_createElementBlock","_hoisted_1","_hoisted_2","src","$data","Logo","alt","_hoisted_4","_hoisted_5","_createCommentVNode","_Fragment","_renderList","characters","character","onClick","_cache","_ctx","showCharacter","apply","arguments","key","id","_hoisted_6","image","name","_toDisplayString","_hoisted_8","$options","closeCharacter","_hoisted_12","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","location","_hoisted_18","_hoisted_19","status","_hoisted_20","_hoisted_21","getEpisodes","episode"],"sources":["/Users/alexandrebeltramini/RepositoriosGit/Ricky-and-morty-API/src/views/CharacterList.vue"],"sourcesContent":["\n<template>\n  <div class=\"list\">\n    <div class=\"bar\">\n      <img class=\"rick-morty-logo\" :src=\"Logo\" alt=\"ricky morty logo\">\n      <h2>Ricky and morty characters list</h2>\n    </div>\n    <ul class=\"characters\">\n      <!-- Iterar sobre a lista de personagens -->\n      <li @click=\"showCharacter\" v-for=\"character in characters\" :key=\"character.id\" class=\"character\">\n        <!-- Mostrar os dados do personagem -->\n        <div class=\"card-container\">\n          <img class=\"character-image\" :src=\"character.image\" :alt=\"character.name\" />\n          <h4>{{ character.name }}</h4>\n        </div>\n\n        <div class=\"character-container\">\n          <div @click=\"closeCharacter\" class=\"close-button\">\n            <span></span>\n            <span></span>\n          </div>\n          <div class=\"container-image\">\n            <img :src=\"character.image\" :alt=\"character.name\" />\n          </div>\n          <p class=\"label-container\"><span>Name:</span> {{ character.name }}</p>\n          <p class=\"label-container\"><span>Location:</span> {{ character.location.name }}</p>\n          <p class=\"label-container\"><span>Status:</span> {{ character.status }}</p>\n          <p class=\"label-container\"><span>Episodes:</span></p>\n          <ul class=\"episodes-list\">\n            <!-- Iterar sobre os episódios do personagem -->\n            <li v-for=\"episode in getEpisodes(character)\" :key=\"episode.id\"><span>{{ episode.episode }}</span>\n            </li>\n          </ul>\n        </div>\n\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Logo from '../assets/rickmortylogo.png'\n\nexport default {\n\n  data() {\n    return {\n      characters: [],\n      episodes: [],\n      Logo,\n    }\n  },\n\n\n  methods: {\n\n    closeCharacter() {\n\n      let allLinks = document.querySelectorAll('.character-container')\n          for (let ind = 0; ind < allLinks.length; ind++) {\n            let linkin = allLinks[ind];\n            linkin.classList.remove('active')\n          }\n    },\n    // Obter os episódios de um personagem\n    getEpisodes(character) {\n      // Filtrar os episódios que contêm o personagem na lista de personagens\n      return this.episodes.filter(episode => episode.characters.includes(character.url));\n    },\n  },\n  mounted() {\n\n\n    axios.get('https://rickandmortyapi.com/api/character')\n      .then(response => {\n        // Obter a lista de personagens\n        this.characters = response.data.results;\n        // Obter a lista de URLs dos episódios\n        let episodeUrls = [];\n        this.characters.forEach(character => {\n          character.episode.forEach(url => {\n            if (!episodeUrls.includes(url)) {\n              episodeUrls.push(url);\n            }\n          });\n        });\n        // Para cada URL, fazer uma requisição GET para obter os dados do episódio\n        episodeUrls.forEach(url => {\n          axios.get(url)\n            .then(response => {\n              // Adicionar o episódio à lista de episódios\n              this.episodes.push(response.data);\n            })\n            .catch(error => {\n              console.error(error);\n            });\n        });\n      })\n      .catch(error => {\n        console.error(error);\n      });\n\n    setTimeout(() => {\n      let cards = document.querySelectorAll('.character');\n      for (let i = 0; i < cards.length; i++) {\n        let card = cards[i];\n        let clic = card.querySelector('.card-container');\n        let container = card.querySelector('.character-container')\n        clic.addEventListener('click', () => {\n          let allClose = document.querySelectorAll('.character-container')\n          for (let ind = 0; ind < allClose.length; ind++) {\n            let close = allClose[ind];\n            close.classList.remove('active')\n            close.classList.remove('animate')\n          }\n          if (container.classList.contains('active')) {\n            container.classList.remove('active')\n            container.classList.remove('animate')\n          } else {\n            container.classList.add('active')\n            container.classList.add('animate')\n          }\n        })\n      }\n    }, 1000)\n  },\n}\n</script>\n\n<style lang=\"scss\">\n.bar {\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0 0 40px;\n  align-items: center;\n}\n\n.bar h2 {\n  margin-left: 10px;\n\n}\n\n.rick-morty-logo {\n  width: 70px;\n  height: 70px;\n}\n\n.characters {\n  display: flex;\n  padding: 0;\n  max-width: 900px;\n  margin: 0 auto;\n  list-style: none;\n  flex-wrap: wrap;\n  column-gap: 20px;\n  row-gap: 20px;\n}\n\n.card-container {\n  height: 100%;\n}\n\n.character {\n\n  width: 31.30%;\n  border: 0;\n  background: var(--black);\n  color: #fff;\n  border-radius: 7px;\n  cursor: pointer;\n}\n\n.character h4 {\n  padding: 0px 20px;\n}\n\n.character-image {\n  display: flex;\n  margin: 0 auto;\n  width: 100%;\n  max-width: 500px;\n  border-radius: 5px 5px 0 0;\n}\n\n.episodes-list {\n  width: 100%;\n  display: flex;\n  padding: 0;\n  text-align: center;\n  flex-wrap: wrap;\n  column-gap: 10px;\n  row-gap: 10px;\n  margin: 10px auto;\n\n}\n\n.episodes-list li {\n  width: fit-content;\n  list-style: none;\n}\n\n.episodes-list span {\n  background-color: #fff;\n  font-weight: bold;\n  padding: 5px;\n  font-size: 11px;\n  border-radius: 5px;\n  color: var(--black);\n}\n\n.character-container {\n  display: none;\n  background-color: var(--black);\n  color: #fff;\n  max-width: 302px;\n  max-height: 90vh;\n  width: auto;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  overflow: scroll;\n  overflow-x: hidden;\n  padding: 30px;\n  border-radius: 5px;\n  box-shadow: 10px 10px 10px rgb(0, 0, 0, 0.2);\n  cursor: initial;\n\n  .label-container span {\n    font-weight: 600;\n  }\n}\n\n\n.active {\n  display: initial;\n}\n\n.animate {\n  animation-name: moveUp;\n  animation-duration: 0.2s;\n  animation-timing-function: ease-in-out;\n}\n\n@keyframes moveUp {\n  0% {\n    transform: translate(-50%, 50%);\n    opacity: 0;\n  }\n\n  100% {\n    transform: translate(-50%, -50%);\n    opacity: 1;\n  }\n}\n\n.container-image {\n  margin: 0 auto;\n  text-align: center;\n}\n\n.container-image img {\n  border-radius: 5px;\n}\n\n\n\n\n/*Close character Button*/\n.close-button {\n  position: fixed;\n  background-color: #fff;\n  right: 0;\n  top: 0;\n  height: 50px;\n  width: 30px;\n  transform: rotate(-45deg);\n  margin-right: -10px;\n  margin-top: -17px;\n  cursor: pointer;\n}\n\n.close-button span {\n  background: var(--black);\n  width: 3px;\n  height: 15px;\n  position: absolute;\n  bottom: 37%;\n  margin-left: 8px;\n\n}\n\n.close-button span:nth-of-type(1) {\n  transform: rotate(0deg)\n}\n\n.close-button span:nth-of-type(2) {\n  transform: rotate(-90deg)\n}\n</style>"],"mappings":";;;EAEO,SAAM;AAAM;;EACV,SAAM;AAAK;;8BAEdA,mBAAA,CAAwC,YAApC,iCAA+B;;EAEjC,SAAM;AAAY;;EAIb,SAAM;AAAgB;;;EAKtB,SAAM;AAAqB;8BAE5BA,mBAAA,CAAa;+BACbA,mBAAA,CAAa;mBADbC,UAAa,EACbC,WAAa,C;;EAEV,SAAM;AAAiB;;;EAGzB,SAAM;AAAiB;+BAACF,mBAAA,CAAkB,cAAZ,OAAK;;EACnC,SAAM;AAAiB;+BAACA,mBAAA,CAAsB,cAAhB,WAAS;;EACvC,SAAM;AAAiB;+BAACA,mBAAA,CAAoB,cAAd,SAAO;+BACxCA,mBAAA,CAAqD;EAAlD,SAAM;AAAiB,I,aAACA,mBAAA,CAAsB,cAAhB,WAAS,E;;EACtC,SAAM;AAAe;;uBA1BjCG,mBAAA,CAmCM,OAnCNC,UAmCM,GAlCJJ,mBAAA,CAGM,OAHNK,UAGM,GAFJL,mBAAA,CAAgE;IAA3D,SAAM,iBAAiB;IAAEM,GAAG,EAAEC,KAAA,CAAAC,IAAI;IAAEC,GAAG,EAAC;uCAC7CC,UAAwC,C,GAE1CV,mBAAA,CA6BK,MA7BLW,UA6BK,GA5BHC,mBAAA,yCAA4C,G,kBAC5CT,mBAAA,CA0BKU,SAAA,QAAAC,WAAA,CA1B0CP,KAAA,CAAAQ,UAAU,YAAvBC,SAAS;yBAA3Cb,mBAAA,CA0BK;MA1BAc,OAAK,EAAAC,MAAA,QAAAA,MAAA;QAAA,OAAEC,IAAA,CAAAC,aAAA,IAAAD,IAAA,CAAAC,aAAA,CAAAC,KAAA,CAAAF,IAAA,EAAAG,SAAA,CAAa;MAAA;MAAmCC,GAAG,EAAEP,SAAS,CAACQ,EAAE;MAAE,SAAM;QACnFZ,mBAAA,oCAAuC,EACvCZ,mBAAA,CAGM,OAHNyB,UAGM,GAFJzB,mBAAA,CAA4E;MAAvE,SAAM,iBAAiB;MAAEM,GAAG,EAAEU,SAAS,CAACU,KAAK;MAAGjB,GAAG,EAAEO,SAAS,CAACW;yCACpE3B,mBAAA,CAA6B,YAAA4B,gBAAA,CAAtBZ,SAAS,CAACW,IAAI,iB,GAGvB3B,mBAAA,CAiBM,OAjBN6B,UAiBM,GAhBJ7B,mBAAA,CAGM;MAHAiB,OAAK,EAAAC,MAAA,QAAAA,MAAA;QAAA,OAAEY,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,CAAAV,KAAA,CAAAS,QAAA,EAAAR,SAAA,CAAc;MAAA;MAAE,SAAM;qBAInCtB,mBAAA,CAEM,OAFNgC,WAEM,GADJhC,mBAAA,CAAoD;MAA9CM,GAAG,EAAEU,SAAS,CAACU,KAAK;MAAGjB,GAAG,EAAEO,SAAS,CAACW;4CAE9C3B,mBAAA,CAAsE,KAAtEiC,WAAsE,GAA3CC,WAAkB,E,iBAAA,GAAC,GAAAN,gBAAA,CAAGZ,SAAS,CAACW,IAAI,iB,GAC/D3B,mBAAA,CAAmF,KAAnFmC,WAAmF,GAAxDC,WAAsB,E,iBAAA,GAAC,GAAAR,gBAAA,CAAGZ,SAAS,CAACqB,QAAQ,CAACV,IAAI,iB,GAC5E3B,mBAAA,CAA0E,KAA1EsC,WAA0E,GAA/CC,WAAoB,E,iBAAA,GAAC,GAAAX,gBAAA,CAAGZ,SAAS,CAACwB,MAAM,iB,GACnEC,WAAqD,EACrDzC,mBAAA,CAIK,MAJL0C,WAIK,GAHH9B,mBAAA,6CAAgD,G,kBAChDT,mBAAA,CACKU,SAAA,QAAAC,WAAA,CADiBgB,QAAA,CAAAa,WAAW,CAAC3B,SAAS,aAAhC4B,OAAO;2BAAlBzC,mBAAA,CACK;QAD0CoB,GAAG,EAAEqB,OAAO,CAACpB;UAAIxB,mBAAA,CAAkC,cAAA4B,gBAAA,CAAzBgB,OAAO,CAACA,OAAO,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}